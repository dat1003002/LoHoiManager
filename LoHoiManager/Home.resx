<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>